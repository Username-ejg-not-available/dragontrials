program := globals END
globals := globals decl 
    |
decl := varDecl SEMICOL
	| fnDecl
	| recordDecl
recordDecl := RECORD id OPEN varDeclList CLOSE
varDecl := type id
varDeclList := varDecl SEMICOL
    | varDeclList varDecl SEMICOL
type := INT
    | BOOL
    | STRING
    | VOID
    | id
fnDecl := type id LPAREN RPAREN OPEN stmtList CLOSE
	| type id LPAREN formals RPAREN OPEN stmtList CLOSE
formals := formalDecl
	| formals COMMA formalDecl
formalDecl := type id
stmtList := stmtList stmt
    |
stmt := varDecl SEMICOL
    | assignExp SEMICOL
    | lval DEC SEMICOL
	| lval INC SEMICOL
	| RECEIVE lval SEMICOL
	| REPORT exp SEMICOL
	| IF LPAREN exp RPAREN OPEN stmtList CLOSE
	| IF LPAREN exp RPAREN OPEN stmtList CLOSE ELSE OPEN stmtList CLOSE
	| WHILE LPAREN exp RPAREN OPEN stmtList CLOSE
	| RETURN exp SEMICOL
	| RETURN SEMICOL
	| callExp SEMICOL
exp := assignExp
    | exp OR exp
    | exp AND exp
    | exp EQUALS exp
    | exp NOTEQUALS exp
    | exp GREATER exp
    | exp GREATEREQ exp
    | exp LESS exp
    | exp LESSEQ exp
    | exp PLUS exp
    | exp MINUS exp
    | exp TIMES exp
    | exp DIVIDE exp
    | NOT exp
    | MINUS term
    | term
assignExp := lval ASSIGN exp
callExp := id LPAREN RPAREN
    | id LPAREN actualsList RPAREN
actualsList := exp
    | actualsList COMMA exp
term := lval
    | INTLITERAL
    | STRLITERAL
    | TRUE
    | FALSE
    | LPAREN exp RPAREN
    | callExp
lval := id
    | id LBRACE id RBRACE
id := ID